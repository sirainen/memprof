# MemProf simplified chinese translation.
# Copyright (C) YEAR Free Software Foundation, Inc.
# He Qiangqiang <carton@263.net>, 2001.
#
msgid ""
msgstr ""
"Project-Id-Version: MemProf\n"
"POT-Creation-Date: 2001-12-10 20:15+0800\n"
"PO-Revision-Date: 2001-12-12 21:50+0800\n"
"Last-Translator: He Qiangqiang <carton@263.net>\n"
"Language-Team: zh_CN <i18n-translation@lists.linux.net.cn>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8-bit\n"

#: main.c:530
#, c-format
msgid "Executation of \"%s\" failed"
msgstr "执行“%s”失败"

#: main.c:656
msgid "Really quit MemProf?"
msgstr "真的要退出 MemProf？"

#.
#. * Translatable strings file generated by Glade.
#. * Add this file to your project's POTFILES.in.
#. * DO NOT compile it as part of your application.
#.
#: main.c:704 memprof-strings.c:7
msgid "MemProf"
msgstr "MemProf"

#: main.c:797
#, c-format
msgid "Cannot find executable for \"%s\""
msgstr "找不到“%s”的可执行文件"

#: main.c:1365
msgid "MemProf Error"
msgstr "MemProf 错误"

#: main.c:1365
msgid "MemProf Warning"
msgstr "MemProf 警告"

#: main.c:1609
msgid "Really detach from finished process?"
msgstr "真的从已完成的进程中脱离？"

#: main.c:1611
msgid "Really detach from running process?"
msgstr "真的从正在运行的进程中脱离？"

#: main.c:1631
msgid "Really kill running process?"
msgstr "真的要杀死正在运行的进程？"

#: main.c:1661
msgid "Create new windows for forked processes"
msgstr "为 fork 出的进程创建新窗口"

#: main.c:1663
msgid "Retain windows for processes after exec()"
msgstr "在进程执行了 exec() 后保留窗口"

#: main.c:1689
msgid "Cannot find memprof.glade"
msgstr "找不到 memprof.glade"

#: memprof-strings.c:8
msgid "_Run..."
msgstr "运行(_R)..."

#: memprof-strings.c:9
msgid "Save _Profile..."
msgstr "保存内存使用分析(_P)..."

#: memprof-strings.c:10
msgid "Save _Leak Info..."
msgstr "保存内存泄漏信息(_L)..."

#: memprof-strings.c:11
msgid "_Process"
msgstr "进程(_P)"

#: memprof-strings.c:12
msgid "Generate _Profile"
msgstr "生成内存使用分析(_P)"

#: memprof-strings.c:13
msgid "Generate _Leak Report"
msgstr "生成内存泄漏报告(_L)"

#: memprof-strings.c:14
msgid "_Kill"
msgstr "杀死(_K)"

#: memprof-strings.c:15
msgid "_Detach"
msgstr "脱离(_D)"

#: memprof-strings.c:16
msgid "Process _Tree"
msgstr "进程树(_T)"

#: memprof-strings.c:17
msgid "Follow _fork()"
msgstr "跟随 _fork()"

#: memprof-strings.c:18
msgid "Follow _exec()"
msgstr "跟随 _exec()"

#: memprof-strings.c:19 memprof-strings.c:21
msgid "Run Program"
msgstr "运行程序"

#: memprof-strings.c:20 memprof-strings.c:74
msgid "Run"
msgstr "运行"

#: memprof-strings.c:22 tree.c:97
msgid "Kill"
msgstr "杀死"

#: memprof-strings.c:23
msgid "Create Profile"
msgstr "创建内存使用分析"

#: memprof-strings.c:24 memprof-strings.c:46
msgid "Profile"
msgstr "内存使用"

#: memprof-strings.c:25
msgid "Check for Leaks"
msgstr "检查内存泄漏"

#: memprof-strings.c:26 memprof-strings.c:54
msgid "Leaks"
msgstr "内存泄漏"

#: memprof-strings.c:27
msgid "Save Report"
msgstr "保存报告"

#: memprof-strings.c:28
msgid "Save"
msgstr "保存"

#: memprof-strings.c:29
msgid "0k"
msgstr "0k"

#: memprof-strings.c:30
msgid "32k"
msgstr "32k"

#: memprof-strings.c:31
msgid "# of Allocations:"
msgstr "分配内存次数："

#: memprof-strings.c:32 memprof-strings.c:34 memprof-strings.c:36
msgid "0"
msgstr "0"

#: memprof-strings.c:33
msgid "Bytes / Allocation:"
msgstr "字节数 / 分配内存块："

#: memprof-strings.c:35
msgid "Total Bytes:"
msgstr "字节总数："

#: memprof-strings.c:37 memprof-strings.c:41 memprof-strings.c:44
#: memprof-strings.c:51
msgid "Function"
msgstr "函数"

#: memprof-strings.c:38
msgid "Self"
msgstr "自身进程"

#: memprof-strings.c:39
msgid "Total"
msgstr "总和"

#: memprof-strings.c:40
msgid "Children"
msgstr "子进程"

#: memprof-strings.c:42 memprof-strings.c:45
msgid "Bytes"
msgstr "字节数"

#: memprof-strings.c:43
msgid "Callers"
msgstr "调用者"

#: memprof-strings.c:47
msgid "Address"
msgstr "地址"

#: memprof-strings.c:48
msgid "Size"
msgstr "大小"

#: memprof-strings.c:49
msgid "Caller"
msgstr "调用者"

#: memprof-strings.c:50
msgid "Stack Trace"
msgstr "堆栈追踪"

#: memprof-strings.c:52
msgid "Line"
msgstr "行数"

#: memprof-strings.c:53
msgid "File"
msgstr "文件"

#: memprof-strings.c:55
msgid "Copyright Red Hat, Inc., 1999-2000"
msgstr "版权所有 Red Hat, Inc., 1999-2000"

#: memprof-strings.c:56
msgid "Memory Profiling Tool"
msgstr "内存使用分析工具"

#: memprof-strings.c:57
msgid "Functions to Skip:"
msgstr "要忽略的函数："

#: memprof-strings.c:58 memprof-strings.c:63
msgid "label37"
msgstr "label37"

#: memprof-strings.c:59 memprof-strings.c:64
msgid "Add..."
msgstr "添加..."

#: memprof-strings.c:60 memprof-strings.c:65
msgid "Delete"
msgstr "删除"

#: memprof-strings.c:61 memprof-strings.c:66
msgid "Defaults"
msgstr "默认"

#: memprof-strings.c:62
msgid "Regular expressions to Skip:"
msgstr "要忽略的函数名正则表达式："

#: memprof-strings.c:67
msgid "Profile Options"
msgstr "内存使用分析选项"

#: memprof-strings.c:68
msgid "Command to run on double click in stack trace:"
msgstr "在堆栈追踪中双击时执行的命令："

#: memprof-strings.c:69
msgid "Leak Detection Options"
msgstr "探测内存泄漏选项"

#: memprof-strings.c:70
msgid "Adding Skip Function"
msgstr "添加要忽略的函数"

#: memprof-strings.c:71 memprof-strings.c:81
msgid "Add"
msgstr "添加"

#: memprof-strings.c:72
msgid "Enter the name of a function to skip when computing  profiles"
msgstr "输入在计算内存内存使用情况时要忽略的函数"

#: memprof-strings.c:73
msgid "Run Executable"
msgstr "运行可执行文件"

#: memprof-strings.c:75
msgid "Enter pathname to a executable"
msgstr "输入可执行文件的路径名"

#: memprof-strings.c:76
msgid "MemProf - Processes"
msgstr "MemProf - 进程"

#: memprof-strings.c:77
msgid "PID"
msgstr "进程号"

#: memprof-strings.c:78
msgid "Command Line"
msgstr "命令行"

#: memprof-strings.c:79
msgid "Status"
msgstr "状态"

#: memprof-strings.c:80
msgid "Adding Skip Regular Expression"
msgstr "添加要忽略的正则表达式"

#: memprof-strings.c:82
msgid ""
"Enter a regular expression of function names to skip when computing profiles"
msgstr "输入在计算内存 profile 时要忽略的函数名的正则表达式"

#: leakdetect.c:587 profile.c:192
#, c-format
msgid "Cannot open output file: %s\n"
msgstr "无法打开输出文件：%s\n"

#: process.c:807
msgid "Initial"
msgstr "初始化"

#: process.c:810
msgid "Starting"
msgstr "正在开始"

#: process.c:813
msgid "Running"
msgstr "正在运行"

#: process.c:816
msgid "Exiting"
msgstr "正在退出"

#: process.c:819 process.c:822
msgid "Defunct"
msgstr "僵尸进程"

#: server.c:238
msgid "Cannot find libmemintercept.so"
msgstr "找不到 libmemintercept.so"

#: tree.c:90
msgid "Show"
msgstr "显示"

#: tree.c:93
msgid "Hide"
msgstr "隐藏"

#: tree.c:100
msgid "Detach"
msgstr "脱离"
